{
  "name": "Scoping Sheet Process",
  "nodes": [
    {
      "parameters": {
        "resource": "pdf",
        "pdfTemplateId": "29077b2398cd8cb6",
        "jsonParameters": true,
        "propertiesJson": "={{ $('Converting Obj to String').item.json.request }}"
      },
      "type": "n8n-nodes-base.apiTemplateIo",
      "typeVersion": 1,
      "position": [
        -420,
        380
      ],
      "id": "848fe260-62f3-48d9-803a-df286fab4216",
      "name": "APITemplate.io1",
      "credentials": {
        "apiTemplateIoApi": {
          "id": "rF2CXSqjAXrdooEx",
          "name": "APITemplate.io account"
        }
      }
    },
    {
      "parameters": {
        "path": "5a0cd093-a0ed-404a-bfa1-be712355a441",
        "responseMode": "responseNode",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        -1620,
        380
      ],
      "id": "a0b4cdb0-3b42-4119-a985-8b54d943c39d",
      "name": "Webhook1",
      "webhookId": "5a0cd093-a0ed-404a-bfa1-be712355a441"
    },
    {
      "parameters": {
        "options": {
          "responseCode": 200
        }
      },
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.1,
      "position": [
        1080,
        460
      ],
      "id": "96b2fb5d-6567-4c09-8769-607e982b03c2",
      "name": "Respond to Webhook1"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "2d0f7d07-a014-4c0e-83cb-7d6e02e6d946",
              "leftValue": "={{ $json.data.approved }}",
              "rightValue": "",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        380,
        360
      ],
      "id": "f14c0818-e750-49f5-b3ce-b66b9149f9f4",
      "name": "If"
    },
    {
      "parameters": {
        "fromEmail": "stormyferntreeofficial@gmail.com",
        "toEmail": "bluebrooke@naver.com",
        "subject": "Scoping Status",
        "emailFormat": "text",
        "text": "=Scoping sheet approval rejected. Please reach out to the client to gather the scope. \nClient Email:  {{ $('combining').item.json.email }}",
        "options": {}
      },
      "type": "n8n-nodes-base.emailSend",
      "typeVersion": 2.1,
      "position": [
        860,
        460
      ],
      "id": "fa13a09b-7e8a-4ecd-a1bb-85bbb10da0ce",
      "name": "Send Email1",
      "webhookId": "8b8f6558-1b2a-476a-9ab8-a810e265bbca",
      "credentials": {
        "smtp": {
          "id": "E6qJoQyuVDVdeRx1",
          "name": "SMTP account"
        }
      }
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.1,
      "position": [
        1100,
        260
      ],
      "id": "0c56f6be-8342-4042-9ca3-b284413de373",
      "name": "Respond to Webhook"
    },
    {
      "parameters": {
        "content": "## Formatting to Markdown \nTakes in JSON request from SLM to generate the Scoping sheet, sending it to Sales for approval.",
        "height": 200,
        "width": 320
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -1140,
        120
      ],
      "id": "73b28d2f-d4b1-4b12-9f75-a8ec42d0869e",
      "name": "Sticky Note"
    },
    {
      "parameters": {
        "content": "## Scoping Sheet approved\nWill trigger the next workflow to generate SOW",
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        0,
        0
      ],
      "id": "7fb79a33-0c4b-4d37-ae77-f1c51e134739",
      "name": "Sticky Note1"
    },
    {
      "parameters": {
        "content": "## Scoping Sheet rejected\nSends email to staff, prompting them to reach out to client for scope",
        "color": 3
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        540,
        660
      ],
      "id": "ecbd3eb8-7254-4c9a-863a-61b14eb8c2e1",
      "name": "Sticky Note2"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "659eee23-dd3b-46f9-b774-cf035c0e9253",
              "name": "request",
              "value": "{\"id\" : 789,    \"email\": \"diansofia03@gmail.com\", \"scopingsheet_markdown\": \"```markdown\\n# Scoping Sheet:\\n|    | 0                                               | 1                                            | status                |\\n|---:|:------------------------------------------------|:---------------------------------------------|:------------------------------------------------------------|\\n|  0 | ('category', 'Application Overview')            | ('requirement', 'Application Name')          | NA                |\\n|  1 | ('category', 'Application Overview')            | ('requirement', 'Production URL')            | NA                |\\n|  2 | ('category', 'Application Overview')            | ('requirement', 'Environment for Testing')   | NA                |\\n|  3 | ('category', 'Application Overview')            | ('requirement', 'Application Type')          | Application Type: Web, API, Mobile |\\n|  4 | ('category', 'Authentication & Access Control') | ('requirement', 'Authentication Method')     | Authentication Method |\\n|  5 | ('category', 'Authentication & Access Control') | ('requirement', 'User Roles')                | NA                |\\n|  6 | ('category', 'Authentication & Access Control') | ('requirement', 'Session Management')        | Session Management |\\n|  7 | ('category', 'Authentication & Access Control') | ('requirement', 'Session timeout period')    | Session timeout period |\\n|  8 | ('category', 'Input Processing')                | ('requirement', 'total_num_input_fields')    | NA                |\\n|  9 | ('category', 'Input Processing')                | ('requirement', 'Input Types Present')       | NA                |\\n| 10 | ('category', 'Data Processing')                 | ('requirement', 'Sensitive Data Handled')    | Sensitive Data Handled: Personal and Healthcare Information |\\n| 11 | ('category', 'Data Processing')                 | ('requirement', 'Data Storage')              | NA                |\\n| 12 | ('category', 'API Details')                     | ('requirement', 'Number of Endpoints')       | NA                |\\n| 13 | ('category', 'API Details')                     | ('requirement', 'Authentication Required')   | Authentication Required |\\n| 14 | ('category', 'API Details')                     | ('requirement', 'Rate Limiting')             | NA                |\\n| 15 | ('category', 'API Details')                     | ('requirement', 'Documentation Available')   | NA                |\\n| 16 | ('category', 'Infrastructure')                  | ('requirement', 'Security Controls Present') | Security Controls |\\n| 17 | ('category', 'Infrastructure')                  | ('requirement', 'Input Types Present')       | NA                |\\n| 18 | ('category', 'Business Logic')                  | ('requirement', 'Critical Functions')        | NA                |\\n| 19 | ('category', 'Security Requirements')           | ('requirement', 'Compliance Requirements')   | HIPAA, GDPR |\\n| 20 | ('category', 'Security Requirements')           | ('requirement', 'Previous Testing')          | NA                |\\n| 21 | ('category', 'Testing Constraints')             | ('requirement', 'Time Restrictions')         | Testing Window: Business Hours |\\n| 22 | ('category', 'Testing Constraints')             | ('requirement', 'Testing Limitations')       | NA                |\\n| 23 | ('category', 'Deliverables')                    | ('requirement', 'Required Reports')          | NA                |\\n| 24 | ('category', 'Deliverables')                    | ('requirement', 'Timeline')                  | NA                |\\n```\\n\\n\\n\\n\",     \"requirement_df\": [         {             \"0\": [                 \"category\",                 \"Application Overview\"             ],             \"1\": [                 \"requirement\",                 \"Application Name\"             ],             \"status\": \"NA \\n\"         },         {             \"0\": [                 \"category\",                 \"Application Overview\"             ],             \"1\": [                 \"requirement\",                 \"Production URL\"             ],             \"status\": \"NA \\n\"},         {             \"0\": [                 \"category\",                 \"Application Overview\"             ],             \"1\": [                 \"requirement\",                 \"Environment for Testing\"             ],             \"status\": \"NA \\n\"         },         {             \"0\": [                 \"category\",                 \"Application Overview\"             ],             \"1\": [                 \"requirement\",                 \"Application Type\"             ],             \"status\": \"Application Type: Web, API, Mobile \\n\"         },         {             \"0\": [                 \"category\",                 \"Authentication & Access Control\"             ],             \"1\": [                 \"requirement\",                 \"Authentication Method\"             ],             \"status\": \"Authentication Method \\n\"         },         {             \"0\": [                 \"category\",                 \"Authentication & Access Control\"             ],             \"1\": [                 \"requirement\",                 \"User Roles\"             ],             \"status\": \"NA \\n\"         },         {             \"0\": [                 \"category\",                 \"Authentication & Access Control\"             ],             \"1\": [                 \"requirement\",                 \"Session Management\"             ],             \"status\": \"Session Management \\n\"         },         {             \"0\": [                 \"category\",                 \"Authentication & Access Control\"             ],             \"1\": [                 \"requirement\",                 \"Session timeout period\"             ],             \"status\": \"Session timeout period \\n\"         },         {             \"0\": [                 \"category\",                 \"Input Processing\"             ],             \"1\": [                 \"requirement\",                 \"total_num_input_fields\"             ],             \"status\": \"NA \\n\"         },         {             \"0\": [                 \"category\",                 \"Input Processing\"             ],             \"1\": [                 \"requirement\",                 \"Input Types Present\"             ],             \"status\": \"NA \\n\"         },         {             \"0\": [                 \"category\",                 \"Data Processing\"             ],             \"1\": [                 \"requirement\",                 \"Sensitive Data Handled\"             ],             \"status\": \"Sensitive Data Handled: Personal and Healthcare Information \\n\"         },         {             \"0\": [                 \"category\",                 \"Data Processing\"             ],             \"1\": [                 \"requirement\",                 \"Data Storage\"             ],             \"status\": \"NA \\n\"         },         {             \"0\": [                 \"category\",                 \"API Details\"             ],             \"1\": [                 \"requirement\",                 \"Number of Endpoints\"             ],             \"status\": \"NA \\n\"         },         {             \"0\": [                 \"category\",                 \"API Details\"             ],             \"1\": [                 \"requirement\",                 \"Authentication Required\"             ],             \"status\": \"Authentication Required \\n\"         },         {             \"0\": [                 \"category\",                 \"API Details\"             ],             \"1\": [                 \"requirement\",                 \"Rate Limiting\"             ],             \"status\": \"NA \\n\"         },         {             \"0\": [                 \"category\",                 \"API Details\"             ],             \"1\": [                 \"requirement\",                 \"Documentation Available\"             ],             \"status\": \"NA \\n\"         },         {             \"0\": [                 \"category\",                 \"Infrastructure\"             ],             \"1\": [                 \"requirement\",                 \"Security Controls Present\"             ],             \"status\": \"Security Controls \\n\"         },         {             \"0\": [                 \"category\",                 \"Infrastructure\"],             \"1\": [                 \"requirement\",                 \"Input Types Present\"             ],             \"status\": \"NA \\n\"         },         {             \"0\": [                 \"category\",                 \"Business Logic\"             ],             \"1\": [                 \"requirement\",                 \"Critical Functions\"             ],             \"status\": \"NA \\n\"         },         {             \"0\": [                 \"category\",                 \"Security Requirements\"             ],             \"1\": [                 \"requirement\",                 \"Compliance Requirements\"             ],             \"status\": \"HIPAA, GDPR \\n\"         },         {             \"0\": [                 \"category\",                 \"Security Requirements\"             ],             \"1\": [                 \"requirement\",                 \"Previous Testing\"             ],             \"status\": \"NA \\n\"         },         {             \"0\": [                 \"category\",                 \"Testing Constraints\"             ],             \"1\": [                 \"requirement\",                 \"Time Restrictions\"             ],             \"status\": \"Testing Window: Business Hours  \\n\"         },         {             \"0\": [                 \"category\",                 \"Testing Constraints\"             ],             \"1\": [                 \"requirement\",                 \"Testing Limitations\"             ],             \"status\": \"NA \\n\"         },         {             \"0\": [                 \"category\",                 \"Deliverables\"             ],             \"1\": [                 \"requirement\",                 \"Required Reports\"             ],             \"status\": \"NA \\n\"         },         {             \"0\": [                 \"category\",                 \"Deliverables\"             ],             \"1\": [                 \"requirement\",                 \"Timeline\"             ],             \"status\": \"NA \\n\"         }     ] }",
              "type": "object"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -1420,
        380
      ],
      "id": "3c06279f-3513-4764-a72e-b488a5920e8b",
      "name": "Setting of JSON Obj"
    },
    {
      "parameters": {
        "mode": "runOnceForEachItem",
        "jsCode": "// Extract data from requirement_df\nconst data = $json.request.requirement_df;\n\n// Table headers\nlet markdownTable = \"## Scoping Sheet\\n\\n\";\nmarkdownTable += \"| Category | Requirement | Status |\\n\";\nmarkdownTable += \"|----------|------------|--------|\\n\";\n\n// Loop through each row and extract details\ndata.forEach(row => {\n    let category = row[0][1];  // Get category name\n    let requirement = row[1][1];  // Get requirement name\n    let status = row.status ? row.status.trim() : \"NA\";  // Clean status field\n\n    // Append row to Markdown table\n    markdownTable += `| ${category} | ${requirement} | ${status} |\\n`;\n});\n\n// Return formatted Markdown\nreturn { scopingsheet_markdown: markdownTable };\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -1200,
        380
      ],
      "id": "0a0a6cfe-892b-4616-a7b8-db271bc55223",
      "name": "Formatting Markdown in JSON"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "87af8451-5340-45a3-83b4-d8dd672efcde",
              "name": "request.scopingsheet_markdown",
              "value": "={{ $json.scopingsheet_markdown }}",
              "type": "string"
            },
            {
              "id": "06178b62-2bbf-4a63-8755-ba544cd134a7",
              "name": "",
              "value": "",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -900,
        380
      ],
      "id": "5a036070-b3e4-45d8-875b-748c5e414ecf",
      "name": "Converting Obj to String"
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "SELECT \n  CASE \n    WHEN EXISTS (\n      SELECT 1 \n      FROM information_schema.tables \n      WHERE table_schema = 'scoping_data' \n        AND table_name = 'scope_db'\n    ) \n    THEN TRUE \n    ELSE FALSE \n  END AS table_exists;",
        "options": {}
      },
      "type": "n8n-nodes-base.mySql",
      "typeVersion": 2.4,
      "position": [
        -600,
        1040
      ],
      "id": "31306dbb-9571-49a1-990f-c5430d88ce6b",
      "name": "Check whether table exists",
      "credentials": {
        "mySql": {
          "id": "pwehlYKuQhhIXisF",
          "name": "MySQL account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "84de71cd-6bef-4560-a039-51429f06821e",
              "leftValue": "={{ $json.table_exists }}",
              "rightValue": 1,
              "operator": {
                "type": "number",
                "operation": "equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -380,
        1040
      ],
      "id": "b8446e4f-bb18-4219-a816-eaea91a1ea9a",
      "name": "If1"
    },
    {
      "parameters": {
        "table": {
          "__rl": true,
          "value": "scope_db",
          "mode": "name"
        },
        "dataMode": "defineBelow",
        "valuesToSend": {
          "values": [
            {
              "column": "id",
              "value": "={{ $('combining').item.json.id }}"
            },
            {
              "column": "email",
              "value": "={{ $('combining').item.json.email }}"
            },
            {
              "column": "scopingsheet_markdown",
              "value": "={{ $('combining').item.json.scopingsheet_markdown }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.mySql",
      "typeVersion": 2.4,
      "position": [
        -120,
        820
      ],
      "id": "a31a6529-fbaa-4172-968b-921f5b2f5244",
      "name": "Insert data into scope_db",
      "credentials": {
        "mySql": {
          "id": "pwehlYKuQhhIXisF",
          "name": "MySQL account"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "CREATE TABLE scope_db (\n  id varchar(255) PRIMARY KEY,\n  email VARCHAR(255),\n  scopingsheet_markdown TEXT,\n  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP\n);",
        "options": {}
      },
      "type": "n8n-nodes-base.mySql",
      "typeVersion": 2.4,
      "position": [
        -160,
        1140
      ],
      "id": "179e5837-bc80-4e3e-8825-c8218c287f0b",
      "name": "Creating table",
      "credentials": {
        "mySql": {
          "id": "pwehlYKuQhhIXisF",
          "name": "MySQL account"
        }
      }
    },
    {
      "parameters": {
        "table": {
          "__rl": true,
          "value": "scope_db",
          "mode": "name"
        },
        "dataMode": "defineBelow",
        "valuesToSend": {
          "values": [
            {
              "column": "id",
              "value": "={{ $('combining').item.json.id }}"
            },
            {
              "column": "email",
              "value": "={{ $('combining').item.json.email }}"
            },
            {
              "column": "scopingsheet_markdown",
              "value": "={{ $('combining').item.json.scopingsheet_markdown }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.mySql",
      "typeVersion": 2.4,
      "position": [
        60,
        1140
      ],
      "id": "070203ae-42d0-48d8-b21a-aaca54587a87",
      "name": "Insert data into scope_db 2",
      "credentials": {
        "mySql": {
          "id": "pwehlYKuQhhIXisF",
          "name": "MySQL account"
        }
      }
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.1,
      "position": [
        100,
        820
      ],
      "id": "3c88af0c-50e7-4bf8-9ddb-a1633814ee17",
      "name": "Respond to Webhook2"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.1,
      "position": [
        280,
        1140
      ],
      "id": "c6902f52-8037-4800-b1fa-0342d0b7e889",
      "name": "Respond to Webhook3"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "db9b3e6e-437b-446a-aa03-80f0d8b5d373",
              "name": "scopingsheet_markdown",
              "value": "={{ $json.request.scopingsheet_markdown }}",
              "type": "string"
            },
            {
              "id": "8e49c9a7-c9ed-4d00-aa67-071cf06faf47",
              "name": "id",
              "value": "={{ $('Setting of JSON Obj').item.json.request.id }}",
              "type": "string"
            },
            {
              "id": "65b05988-5ac7-49fd-962f-718c057f8684",
              "name": "email",
              "value": "={{ $('Setting of JSON Obj').item.json.request.email }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -680,
        380
      ],
      "id": "0b22377a-2059-42c4-9104-3e45fee75830",
      "name": "combining"
    },
    {
      "parameters": {
        "operation": "sendAndWait",
        "fromEmail": "stormyferntreeofficial@gmail.com",
        "toEmail": "=bluebrooke@naver.com",
        "subject": "Generated Scoping Sheet Approval",
        "message": "=Please view the generated scoping sheet through the link before approving or rejecting the document.\nLink:  {{ $json.download_url }}",
        "approvalOptions": {
          "values": {
            "approvalType": "double",
            "disapproveLabel": "Reject"
          }
        },
        "options": {
          "limitWaitTime": {
            "values": {
              "resumeAmount": 2,
              "resumeUnit": "days"
            }
          }
        }
      },
      "type": "n8n-nodes-base.emailSend",
      "typeVersion": 2.1,
      "position": [
        0,
        280
      ],
      "id": "e79ed88f-c9bf-4182-aee0-ae5865bbb41a",
      "name": "Send Email to Staff",
      "webhookId": "4e0f99db-90bd-418c-a4f9-2893d04ab103",
      "alwaysOutputData": false,
      "credentials": {
        "smtp": {
          "id": "E6qJoQyuVDVdeRx1",
          "name": "SMTP account"
        }
      }
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.1,
      "position": [
        200,
        540
      ],
      "id": "146eb457-03db-4d8c-8d67-796aa314058e",
      "name": "Respond to Webhook4"
    },
    {
      "parameters": {
        "fromEmail": "stormyferntreeofficial@gmail.com",
        "toEmail": "={{ $('combining').item.json.email }}",
        "subject": "Generated Scoping Sheet",
        "emailFormat": "text",
        "text": "=Click on the link to view the generated scoping sheet. The content is based on the responses provided in the chat. \nLink:  {{ $json.download_url }}",
        "options": {}
      },
      "type": "n8n-nodes-base.emailSend",
      "typeVersion": 2.1,
      "position": [
        -20,
        540
      ],
      "id": "50f6ca90-e769-4a07-bbd4-2abc97885d9a",
      "name": "Send Email to client",
      "webhookId": "9e5d33d3-b455-44f8-94cf-6c1807341513",
      "credentials": {
        "smtp": {
          "id": "E6qJoQyuVDVdeRx1",
          "name": "SMTP account"
        }
      }
    },
    {
      "parameters": {
        "workflowId": {
          "__rl": true,
          "value": "iYWKaQzBWhK30rPq",
          "mode": "list",
          "cachedResultName": "SOW Generation"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {},
          "matchingColumns": [],
          "schema": [],
          "attemptToConvertTypes": false,
          "convertFieldsToString": true
        },
        "options": {}
      },
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1.2,
      "position": [
        880,
        260
      ],
      "id": "d6d885ab-aa31-4d1c-b251-de15d5df8cda",
      "name": "Execute SOW Workflow"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "ab4320ab-ff4e-4d44-a8ef-b983b739d336",
              "name": "client_id",
              "value": "={{ $('combining').item.json.id }}",
              "type": "string"
            },
            {
              "id": "10df3fd4-3e95-415a-9c3d-cceb5fea7bc2",
              "name": "client_email",
              "value": "={{ $('combining').item.json.email }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        600,
        260
      ],
      "id": "a739dd89-e818-4519-b6b4-3e0727d17c2e",
      "name": "Passing Key"
    }
  ],
  "pinData": {},
  "connections": {
    "APITemplate.io1": {
      "main": [
        [
          {
            "node": "Send Email to client",
            "type": "main",
            "index": 0
          },
          {
            "node": "Send Email to Staff",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Webhook1": {
      "main": [
        [
          {
            "node": "Setting of JSON Obj",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If": {
      "main": [
        [
          {
            "node": "Check whether table exists",
            "type": "main",
            "index": 0
          },
          {
            "node": "Passing Key",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Send Email1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Send Email1": {
      "main": [
        [
          {
            "node": "Respond to Webhook1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Setting of JSON Obj": {
      "main": [
        [
          {
            "node": "Formatting Markdown in JSON",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Formatting Markdown in JSON": {
      "main": [
        [
          {
            "node": "Converting Obj to String",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Converting Obj to String": {
      "main": [
        [
          {
            "node": "combining",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check whether table exists": {
      "main": [
        [
          {
            "node": "If1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If1": {
      "main": [
        [
          {
            "node": "Insert data into scope_db",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Creating table",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Creating table": {
      "main": [
        [
          {
            "node": "Insert data into scope_db 2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Insert data into scope_db": {
      "main": [
        [
          {
            "node": "Respond to Webhook2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Insert data into scope_db 2": {
      "main": [
        [
          {
            "node": "Respond to Webhook3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "combining": {
      "main": [
        [
          {
            "node": "APITemplate.io1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Send Email to Staff": {
      "main": [
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Send Email to client": {
      "main": [
        [
          {
            "node": "Respond to Webhook4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Execute SOW Workflow": {
      "main": [
        [
          {
            "node": "Respond to Webhook",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Passing Key": {
      "main": [
        [
          {
            "node": "Execute SOW Workflow",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "bbfd5ece-17fb-4b5f-aba8-1d11c4935d65",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "8712c2bb4e02902a13a43c75c2acacd2aabdb06be443b7b14c332bd919069ab1"
  },
  "id": "qMT0KZFYsYYr5ypg",
  "tags": []
}